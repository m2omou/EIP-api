var search_data = {"index":{"searchIndex":["alphauser","alphauserscontroller","alphausershelper","apikey","applicationcontroller","applicationhelper","avataruploader","categoriescontroller","categorieshelper","comment","commentscontroller","commentshelper","conversation","conversationscontroller","conversationshelper","fileuploader","flow","flowscontroller","flowshelper","followedplace","followedplacescontroller","followedplaceshelper","message","messagescontroller","messageshelper","passwordresetscontroller","passwordresetshelper","place","placescontroller","placeshelper","publication","publicationscontroller","publicationshelper","reportcomment","reportcommentscontroller","reportcommentshelper","reportpublication","reportpublicationscontroller","reportpublicationshelper","sessionscontroller","sessionshelper","setting","settingscontroller","settingshelper","user","usermailer","userscontroller","user","usershelper","vote","votescontroller","voteshelper","webservicescontroller","webserviceshelper","welcomecontroller","welcomehelper","advertising()","allowedtopublish?()","alpha_user_confirm()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","authenticate()","category()","checkemptyvalue()","checkmediasources()","checkpublicationtype()","comment()","comment_params()","company()","conversation_exist?()","conversation_params()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","current_user()","current_user()","current_user=()","default_url()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","edit()","edit()","encrypt()","encrypt_password()","except()","except()","except()","except()","except()","except()","except()","except()","extension_white_list()","faq()","find_conversation_id()","flow_params()","followed_place_params()","generate_access_token()","generate_token()","get_auth_token_user_id()","image?()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","isayoutubevideo?()","jsonresponseformat()","login()","login()","media()","message_params()","new()","new()","new()","new()","new()","new()","new()","new()","new_remember_token()","password_reset()","place()","place_params()","placemessage()","power()","publication()","publication_params()","relationship()","report()","report_comment_params()","report_publication_params()","resetpassword()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","restrict_access()","search()","search()","send_password_reset()","set_comment()","set_conversation()","set_flow()","set_followed_place()","set_locale()","set_message()","set_place()","set_publication()","set_report_comment()","set_report_publication()","set_setting()","set_user()","set_vote()","setting_params()","show()","show()","show()","show()","show()","show()","show()","show()","sign_in()","sign_out()","signed_in?()","store_dir()","store_dir()","update()","update()","update()","update()","update()","update()","update()","user()","user_params()","vote()","vote_params()"],"longSearchIndex":["alphauser","alphauserscontroller","alphausershelper","apikey","applicationcontroller","applicationhelper","avataruploader","categoriescontroller","categorieshelper","comment","commentscontroller","commentshelper","conversation","conversationscontroller","conversationshelper","fileuploader","flow","flowscontroller","flowshelper","followedplace","followedplacescontroller","followedplaceshelper","message","messagescontroller","messageshelper","passwordresetscontroller","passwordresetshelper","place","placescontroller","placeshelper","publication","publicationscontroller","publicationshelper","reportcomment","reportcommentscontroller","reportcommentshelper","reportpublication","reportpublicationscontroller","reportpublicationshelper","sessionscontroller","sessionshelper","setting","settingscontroller","settingshelper","user","usermailer","userscontroller","userscontroller::user","usershelper","vote","votescontroller","voteshelper","webservicescontroller","webserviceshelper","welcomecontroller","welcomehelper","webservicescontroller#advertising()","publicationshelper::allowedtopublish?()","usermailer#alpha_user_confirm()","comment#as_json()","conversation#as_json()","followedplace#as_json()","message#as_json()","publication#as_json()","reportcomment#as_json()","reportpublication#as_json()","user#as_json()","user::authenticate()","webservicescontroller#category()","applicationhelper::checkemptyvalue()","publicationshelper::checkmediasources()","publicationshelper::checkpublicationtype()","webservicescontroller#comment()","commentscontroller#comment_params()","webservicescontroller#company()","messageshelper::conversation_exist?()","conversationscontroller#conversation_params()","alphauserscontroller#create()","commentscontroller#create()","conversationscontroller#create()","followedplacescontroller#create()","messagescontroller#create()","passwordresetscontroller#create()","publicationscontroller#create()","reportcommentscontroller#create()","reportpublicationscontroller#create()","sessionscontroller#create()","userscontroller#create()","votescontroller#create()","applicationcontroller#current_user()","sessionshelper#current_user()","sessionshelper#current_user=()","avataruploader#default_url()","alphauserscontroller#destroy()","commentscontroller#destroy()","conversationscontroller#destroy()","followedplacescontroller#destroy()","messagescontroller#destroy()","publicationscontroller#destroy()","sessionscontroller#destroy()","userscontroller#destroy()","votescontroller#destroy()","commentscontroller#edit()","conversationscontroller#edit()","followedplacescontroller#edit()","passwordresetscontroller#edit()","userscontroller#edit()","votescontroller#edit()","userscontroller::user::encrypt()","user#encrypt_password()","comment#except()","conversation#except()","followedplace#except()","message#except()","publication#except()","reportcomment#except()","reportpublication#except()","user#except()","fileuploader#extension_white_list()","welcomecontroller#faq()","messageshelper::find_conversation_id()","flowscontroller#flow_params()","followedplacescontroller#followed_place_params()","apikey#generate_access_token()","user#generate_token()","applicationcontroller#get_auth_token_user_id()","fileuploader#image?()","alphauserscontroller#index()","categoriescontroller#index()","commentscontroller#index()","conversationscontroller#index()","flowscontroller#index()","followedplacescontroller#index()","messagescontroller#index()","placescontroller#index()","publicationscontroller#index()","votescontroller#index()","webservicescontroller#index()","welcomecontroller#index()","publicationshelper::isayoutubevideo?()","applicationhelper::jsonresponseformat()","userscontroller#login()","webservicescontroller#login()","webservicescontroller#media()","messagescontroller#message_params()","commentscontroller#new()","conversationscontroller#new()","followedplacescontroller#new()","passwordresetscontroller#new()","publicationscontroller#new()","sessionscontroller#new()","userscontroller#new()","votescontroller#new()","userscontroller::user::new_remember_token()","usermailer#password_reset()","webservicescontroller#place()","placescontroller#place_params()","webservicescontroller#placemessage()","publicationshelper::power()","webservicescontroller#publication()","publicationscontroller#publication_params()","webservicescontroller#relationship()","webservicescontroller#report()","reportcommentscontroller#report_comment_params()","reportpublicationscontroller#report_publication_params()","webservicescontroller#resetpassword()","commentscontroller#restrict_access()","conversationscontroller#restrict_access()","flowscontroller#restrict_access()","followedplacescontroller#restrict_access()","messagescontroller#restrict_access()","placescontroller#restrict_access()","publicationscontroller#restrict_access()","reportcommentscontroller#restrict_access()","reportpublicationscontroller#restrict_access()","sessionscontroller#restrict_access()","settingscontroller#restrict_access()","userscontroller#restrict_access()","votescontroller#restrict_access()","placescontroller#search()","userscontroller#search()","user#send_password_reset()","commentscontroller#set_comment()","conversationscontroller#set_conversation()","flowscontroller#set_flow()","followedplacescontroller#set_followed_place()","alphauserscontroller#set_locale()","messagescontroller#set_message()","placescontroller#set_place()","publicationscontroller#set_publication()","reportcommentscontroller#set_report_comment()","reportpublicationscontroller#set_report_publication()","settingscontroller#set_setting()","userscontroller#set_user()","votescontroller#set_vote()","settingscontroller#setting_params()","commentscontroller#show()","conversationscontroller#show()","followedplacescontroller#show()","placescontroller#show()","publicationscontroller#show()","settingscontroller#show()","userscontroller#show()","votescontroller#show()","sessionshelper#sign_in()","sessionshelper#sign_out()","sessionshelper#signed_in?()","avataruploader#store_dir()","fileuploader#store_dir()","commentscontroller#update()","conversationscontroller#update()","followedplacescontroller#update()","messagescontroller#update()","passwordresetscontroller#update()","settingscontroller#update()","userscontroller#update()","webservicescontroller#user()","userscontroller#user_params()","webservicescontroller#vote()","votescontroller#vote_params()"],"info":[["AlphaUser","","AlphaUser.html","",""],["AlphaUsersController","","AlphaUsersController.html","",""],["AlphaUsersHelper","","AlphaUsersHelper.html","",""],["ApiKey","","ApiKey.html","",""],["ApplicationController","","ApplicationController.html","","<p>This controller is inherit by all the other controller. That means that all\nthe functions that this controller …\n"],["ApplicationHelper","","ApplicationHelper.html","",""],["AvatarUploader","","AvatarUploader.html","",""],["CategoriesController","","CategoriesController.html","",""],["CategoriesHelper","","CategoriesHelper.html","",""],["Comment","","Comment.html","",""],["CommentsController","","CommentsController.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["Conversation","","Conversation.html","",""],["ConversationsController","","ConversationsController.html","",""],["ConversationsHelper","","ConversationsHelper.html","",""],["FileUploader","","FileUploader.html","",""],["Flow","","Flow.html","",""],["FlowsController","","FlowsController.html","",""],["FlowsHelper","","FlowsHelper.html","",""],["FollowedPlace","","FollowedPlace.html","",""],["FollowedPlacesController","","FollowedPlacesController.html","",""],["FollowedPlacesHelper","","FollowedPlacesHelper.html","",""],["Message","","Message.html","",""],["MessagesController","","MessagesController.html","",""],["MessagesHelper","","MessagesHelper.html","",""],["PasswordResetsController","","PasswordResetsController.html","",""],["PasswordResetsHelper","","PasswordResetsHelper.html","",""],["Place","","Place.html","",""],["PlacesController","","PlacesController.html","",""],["PlacesHelper","","PlacesHelper.html","",""],["Publication","","Publication.html","",""],["PublicationsController","","PublicationsController.html","",""],["PublicationsHelper","","PublicationsHelper.html","",""],["ReportComment","","ReportComment.html","",""],["ReportCommentsController","","ReportCommentsController.html","",""],["ReportCommentsHelper","","ReportCommentsHelper.html","",""],["ReportPublication","","ReportPublication.html","",""],["ReportPublicationsController","","ReportPublicationsController.html","",""],["ReportPublicationsHelper","","ReportPublicationsHelper.html","",""],["SessionsController","","SessionsController.html","","<p>This controller is used in order to log in or log out the user. It is bind\nto the routes /log_out and …\n"],["SessionsHelper","","SessionsHelper.html","",""],["Setting","","Setting.html","",""],["SettingsController","","SettingsController.html","",""],["SettingsHelper","","SettingsHelper.html","",""],["User","","User.html","",""],["UserMailer","","UserMailer.html","",""],["UsersController","","UsersController.html","",""],["UsersController::User","","UsersController/User.html","",""],["UsersHelper","","UsersHelper.html","",""],["Vote","","Vote.html","",""],["VotesController","","VotesController.html","",""],["VotesHelper","","VotesHelper.html","",""],["WebservicesController","","WebservicesController.html","",""],["WebservicesHelper","","WebservicesHelper.html","",""],["WelcomeController","","WelcomeController.html","","<p>This controller manages the first view of Neerbyy. Indeed, this load the\nindex page, which redirects …\n"],["WelcomeHelper","","WelcomeHelper.html","",""],["advertising","WebservicesController","WebservicesController.html#method-i-advertising","()",""],["allowedToPublish?","PublicationsHelper","PublicationsHelper.html#method-c-allowedToPublish-3F","(user, place, distanceMax)","<p>If the user is too far from the place, the user won&#39;t be able to create\na publication Check the distance …\n"],["alpha_user_confirm","UserMailer","UserMailer.html#method-i-alpha_user_confirm","(mail_addr, uuid, url)",""],["as_json","Comment","Comment.html#method-i-as_json","(options={})","<p>overwrite the as_json method to add user info\n"],["as_json","Conversation","Conversation.html#method-i-as_json","(options={})","<p>overwrite the as_json method to add user info, user vote status, number of\ncomments\n"],["as_json","FollowedPlace","FollowedPlace.html#method-i-as_json","(options={})",""],["as_json","Message","Message.html#method-i-as_json","(options={})","<p>overwrite the as_json method to add user info, user vote status, number of\ncomments\n"],["as_json","Publication","Publication.html#method-i-as_json","(options={})","<p>overwrite the as_json method to add user info, user vote status, number of\ncomments\n"],["as_json","ReportComment","ReportComment.html#method-i-as_json","(options={})","<p>overwrite the as_json method to add user info\n"],["as_json","ReportPublication","ReportPublication.html#method-i-as_json","(options={})","<p>overwrite the as_json method to add user info\n"],["as_json","User","User.html#method-i-as_json","(options={})","<p>overwrite the as_json method to add avatar and thumb\n"],["authenticate","User","User.html#method-c-authenticate","(email, password)","<p>method to check the login authentification\n"],["category","WebservicesController","WebservicesController.html#method-i-category","()",""],["checkEmptyValue","ApplicationHelper","ApplicationHelper.html#method-c-checkEmptyValue","(params)",""],["checkMediaSources","PublicationsHelper","PublicationsHelper.html#method-c-checkMediaSources","(link)","<p>check media type such as youtube, dailymotion, …\n"],["checkPublicationType","PublicationsHelper","PublicationsHelper.html#method-c-checkPublicationType","(pub, publication_params)","<p>Method that check the publication type, link, image, video…\n"],["comment","WebservicesController","WebservicesController.html#method-i-comment","()",""],["comment_params","CommentsController","CommentsController.html#method-i-comment_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["company","WebservicesController","WebservicesController.html#method-i-company","()",""],["conversation_exist?","MessagesHelper","MessagesHelper.html#method-c-conversation_exist-3F","(user_id, recipient_id)",""],["conversation_params","ConversationsController","ConversationsController.html#method-i-conversation_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["create","AlphaUsersController","AlphaUsersController.html#method-i-create","()","<p>This function is called when a user validate the form to subsribe at the\nAlpha Version. It will be used …\n"],["create","CommentsController","CommentsController.html#method-i-create","()","<p>POST /comments POST /comments.json\n"],["create","ConversationsController","ConversationsController.html#method-i-create","()","<p>POST /conversations POST /conversations.json\n"],["create","FollowedPlacesController","FollowedPlacesController.html#method-i-create","()","<p>POST /followed_places POST /followed_places.json\n"],["create","MessagesController","MessagesController.html#method-i-create","()","<p>POST /messages POST /messages.json Send a message to the given user, if a\nconversation doesn&#39;t already …\n"],["create","PasswordResetsController","PasswordResetsController.html#method-i-create","()",""],["create","PublicationsController","PublicationsController.html#method-i-create","()","<p>POST /publications POST /publications.json\n"],["create","ReportCommentsController","ReportCommentsController.html#method-i-create","()","<p>POST /report_comments POST /report_comments.json\n"],["create","ReportPublicationsController","ReportPublicationsController.html#method-i-create","()","<p>POST /report_publications POST /report_publications.json\n"],["create","SessionsController","SessionsController.html#method-i-create","()","<p>This method is called when the user submit his email and password in the\nview /log_in. If the authenticate …\n"],["create","UsersController","UsersController.html#method-i-create","()","<p>POST /users POST /users.json\n"],["create","VotesController","VotesController.html#method-i-create","()","<p>POST /votes POST /votes.json\n"],["current_user","ApplicationController","ApplicationController.html#method-i-current_user","()","<p>This function allows to access to the current user which is authenticate on\nthe website. If there is …\n"],["current_user","SessionsHelper","SessionsHelper.html#method-i-current_user","()",""],["current_user=","SessionsHelper","SessionsHelper.html#method-i-current_user-3D","(user)",""],["default_url","AvatarUploader","AvatarUploader.html#method-i-default_url","()","<p>Provide a default URL as a default if there hasn&#39;t been a file\nuploaded:\n"],["destroy","AlphaUsersController","AlphaUsersController.html#method-i-destroy","()",""],["destroy","CommentsController","CommentsController.html#method-i-destroy","()","<p>DELETE /comments/1 DELETE /comments/1.json\n"],["destroy","ConversationsController","ConversationsController.html#method-i-destroy","()","<p>DELETE /conversations/1 DELETE /conversations/1.json\n"],["destroy","FollowedPlacesController","FollowedPlacesController.html#method-i-destroy","()","<p>DELETE /followed_places/1 DELETE /followed_places/1.json\n"],["destroy","MessagesController","MessagesController.html#method-i-destroy","()","<p>DELETE /messages/1 DELETE /messages/1.json\n"],["destroy","PublicationsController","PublicationsController.html#method-i-destroy","()","<p>DELETE /publications/1 DELETE /publications/1.json\n"],["destroy","SessionsController","SessionsController.html#method-i-destroy","()","<p>The logout method\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /users/1 DELETE /users/1.json\n"],["destroy","VotesController","VotesController.html#method-i-destroy","()","<p>DELETE /votes/1 DELETE /votes/1.json\n"],["edit","CommentsController","CommentsController.html#method-i-edit","()","<p>GET /comments/1/edit\n"],["edit","ConversationsController","ConversationsController.html#method-i-edit","()","<p>GET /conversations/1/edit\n"],["edit","FollowedPlacesController","FollowedPlacesController.html#method-i-edit","()","<p>GET /followed_places/1/edit\n"],["edit","PasswordResetsController","PasswordResetsController.html#method-i-edit","()",""],["edit","UsersController","UsersController.html#method-i-edit","()","<p>GET /users/1/edit\n"],["edit","VotesController","VotesController.html#method-i-edit","()","<p>GET /votes/1/edit\n"],["encrypt","UsersController::User","UsersController/User.html#method-c-encrypt","(token)",""],["encrypt_password","User","User.html#method-i-encrypt_password","()","<p>generate a hash and a salt for the password\n"],["except","Comment","Comment.html#method-i-except","()",""],["except","Conversation","Conversation.html#method-i-except","()",""],["except","FollowedPlace","FollowedPlace.html#method-i-except","()",""],["except","Message","Message.html#method-i-except","()",""],["except","Publication","Publication.html#method-i-except","()",""],["except","ReportComment","ReportComment.html#method-i-except","()",""],["except","ReportPublication","ReportPublication.html#method-i-except","()",""],["except","User","User.html#method-i-except","()","<p>hide certain information\n"],["extension_white_list","FileUploader","FileUploader.html#method-i-extension_white_list","()","<p>Add a white list of extensions which are allowed to be uploaded. For images\nyou might use something like …\n"],["faq","WelcomeController","WelcomeController.html#method-i-faq","()",""],["find_conversation_id","MessagesHelper","MessagesHelper.html#method-c-find_conversation_id","(user_id, recipient_id)",""],["flow_params","FlowsController","FlowsController.html#method-i-flow_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["followed_place_params","FollowedPlacesController","FollowedPlacesController.html#method-i-followed_place_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["generate_access_token","ApiKey","ApiKey.html#method-i-generate_access_token","()",""],["generate_token","User","User.html#method-i-generate_token","(column)","<p>generate a new token\n"],["get_auth_token_user_id","ApplicationController","ApplicationController.html#method-i-get_auth_token_user_id","()",""],["image?","FileUploader","FileUploader.html#method-i-image-3F","(new_file)",""],["index","AlphaUsersController","AlphaUsersController.html#method-i-index","()",""],["index","CategoriesController","CategoriesController.html#method-i-index","()",""],["index","CommentsController","CommentsController.html#method-i-index","()","<p>GET /comments GET /comments.json\n"],["index","ConversationsController","ConversationsController.html#method-i-index","()","<p>GET /conversations GET /conversations.json Get the list of conversations\nfor the authenticated user\n"],["index","FlowsController","FlowsController.html#method-i-index","()","<p>GET /flows GET /flows.json\n"],["index","FollowedPlacesController","FollowedPlacesController.html#method-i-index","()","<p>GET /followed_places GET /followed_places.json\n"],["index","MessagesController","MessagesController.html#method-i-index","()","<p>GET /messages GET /messages.json Get the list of messages for the\nauthenticated user in the given conversation …\n"],["index","PlacesController","PlacesController.html#method-i-index","()","<p>GET /places GET /places.json\n"],["index","PublicationsController","PublicationsController.html#method-i-index","()","<p>GET /publications GET /publications.json\n"],["index","VotesController","VotesController.html#method-i-index","()","<p>GET /votes GET /votes.json\n"],["index","WebservicesController","WebservicesController.html#method-i-index","()","<p>GET /webservices GET /webservices.json\n"],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["isAYoutubeVideo?","PublicationsHelper","PublicationsHelper.html#method-c-isAYoutubeVideo-3F","(url)","<p>regex youtube videos\n"],["jsonResponseFormat","ApplicationHelper","ApplicationHelper.html#method-c-jsonResponseFormat","(responseCode, responseMessage, result)",""],["login","UsersController","UsersController.html#method-i-login","()",""],["login","WebservicesController","WebservicesController.html#method-i-login","()",""],["media","WebservicesController","WebservicesController.html#method-i-media","()",""],["message_params","MessagesController","MessagesController.html#method-i-message_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["new","CommentsController","CommentsController.html#method-i-new","()","<p>GET /comments/new\n"],["new","ConversationsController","ConversationsController.html#method-i-new","()","<p>GET /conversations/new\n"],["new","FollowedPlacesController","FollowedPlacesController.html#method-i-new","()","<p>GET /followed_places/new\n"],["new","PasswordResetsController","PasswordResetsController.html#method-i-new","()",""],["new","PublicationsController","PublicationsController.html#method-i-new","()","<p>GET /publications/new\n"],["new","SessionsController","SessionsController.html#method-i-new","()","<p>This method is called when the user go to the route /log_in and loads the\nview /views/sessions/new.html.erb …\n"],["new","UsersController","UsersController.html#method-i-new","()","<p>GET /users/new\n"],["new","VotesController","VotesController.html#method-i-new","()","<p>GET /votes/new\n"],["new_remember_token","UsersController::User","UsersController/User.html#method-c-new_remember_token","()",""],["password_reset","UserMailer","UserMailer.html#method-i-password_reset","(user)","<p>Subject can be set in your I18n file at config/locales/en.yml with the\nfollowing lookup:\n\n<pre>en.user_mailer.password_reset.subject</pre>\n"],["place","WebservicesController","WebservicesController.html#method-i-place","()",""],["place_params","PlacesController","PlacesController.html#method-i-place_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["placemessage","WebservicesController","WebservicesController.html#method-i-placemessage","()",""],["power","PublicationsHelper","PublicationsHelper.html#method-c-power","(num, pow)",""],["publication","WebservicesController","WebservicesController.html#method-i-publication","()",""],["publication_params","PublicationsController","PublicationsController.html#method-i-publication_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["relationship","WebservicesController","WebservicesController.html#method-i-relationship","()",""],["report","WebservicesController","WebservicesController.html#method-i-report","()",""],["report_comment_params","ReportCommentsController","ReportCommentsController.html#method-i-report_comment_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["report_publication_params","ReportPublicationsController","ReportPublicationsController.html#method-i-report_publication_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["resetpassword","WebservicesController","WebservicesController.html#method-i-resetpassword","()",""],["restrict_access","CommentsController","CommentsController.html#method-i-restrict_access","()","<p>ask for token access\n"],["restrict_access","ConversationsController","ConversationsController.html#method-i-restrict_access","()","<p>ask for token access\n"],["restrict_access","FlowsController","FlowsController.html#method-i-restrict_access","()",""],["restrict_access","FollowedPlacesController","FollowedPlacesController.html#method-i-restrict_access","()","<p>ask for token access\n"],["restrict_access","MessagesController","MessagesController.html#method-i-restrict_access","()","<p>ask for token access\n"],["restrict_access","PlacesController","PlacesController.html#method-i-restrict_access","()",""],["restrict_access","PublicationsController","PublicationsController.html#method-i-restrict_access","()","<p>ask for token access\n"],["restrict_access","ReportCommentsController","ReportCommentsController.html#method-i-restrict_access","()","<p>ask for token access\n"],["restrict_access","ReportPublicationsController","ReportPublicationsController.html#method-i-restrict_access","()","<p>ask for token access\n"],["restrict_access","SessionsController","SessionsController.html#method-i-restrict_access","()","<p>check if token exist\n"],["restrict_access","SettingsController","SettingsController.html#method-i-restrict_access","()","<p>ask for token access\n"],["restrict_access","UsersController","UsersController.html#method-i-restrict_access","()","<p>check if token exist\n"],["restrict_access","VotesController","VotesController.html#method-i-restrict_access","()",""],["search","PlacesController","PlacesController.html#method-i-search","()","<p>Search for a places using a query\n"],["search","UsersController","UsersController.html#method-i-search","()","<p>GET /search Search for users, returning users that match the search query,\nthe result is limited to 20 …\n"],["send_password_reset","User","User.html#method-i-send_password_reset","()","<p>reset password\n"],["set_comment","CommentsController","CommentsController.html#method-i-set_comment","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_conversation","ConversationsController","ConversationsController.html#method-i-set_conversation","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_flow","FlowsController","FlowsController.html#method-i-set_flow","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_followed_place","FollowedPlacesController","FollowedPlacesController.html#method-i-set_followed_place","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_locale","AlphaUsersController","AlphaUsersController.html#method-i-set_locale","()",""],["set_message","MessagesController","MessagesController.html#method-i-set_message","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_place","PlacesController","PlacesController.html#method-i-set_place","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_publication","PublicationsController","PublicationsController.html#method-i-set_publication","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_report_comment","ReportCommentsController","ReportCommentsController.html#method-i-set_report_comment","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_report_publication","ReportPublicationsController","ReportPublicationsController.html#method-i-set_report_publication","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_setting","SettingsController","SettingsController.html#method-i-set_setting","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_user","UsersController","UsersController.html#method-i-set_user","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_vote","VotesController","VotesController.html#method-i-set_vote","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["setting_params","SettingsController","SettingsController.html#method-i-setting_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["show","CommentsController","CommentsController.html#method-i-show","()","<p>GET /comments/1 GET /comments/1.json\n"],["show","ConversationsController","ConversationsController.html#method-i-show","()","<p>GET /conversations/1 GET /conversations/1.json\n"],["show","FollowedPlacesController","FollowedPlacesController.html#method-i-show","()","<p>GET /followed_places/1 GET /followed_places/1.json\n"],["show","PlacesController","PlacesController.html#method-i-show","()","<p>GET /places/1 GET /places/1.json\n"],["show","PublicationsController","PublicationsController.html#method-i-show","()",""],["show","SettingsController","SettingsController.html#method-i-show","()","<p>GET /settings/1 GET /settings/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /users/1 GET /users/1.json\n"],["show","VotesController","VotesController.html#method-i-show","()","<p>GET /votes/1 GET /votes/1.json\n"],["sign_in","SessionsHelper","SessionsHelper.html#method-i-sign_in","(user)",""],["sign_out","SessionsHelper","SessionsHelper.html#method-i-sign_out","()",""],["signed_in?","SessionsHelper","SessionsHelper.html#method-i-signed_in-3F","()",""],["store_dir","AvatarUploader","AvatarUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["store_dir","FileUploader","FileUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["update","CommentsController","CommentsController.html#method-i-update","()","<p>PATCH/PUT /comments/1 PATCH/PUT /comments/1.json\n"],["update","ConversationsController","ConversationsController.html#method-i-update","()","<p>PATCH/PUT /conversations/1 PATCH/PUT /conversations/1.json\n"],["update","FollowedPlacesController","FollowedPlacesController.html#method-i-update","()","<p>PATCH/PUT /followed_places/1 PATCH/PUT /followed_places/1.json\n"],["update","MessagesController","MessagesController.html#method-i-update","()","<p>PATCH/PUT /messages/1 PATCH/PUT /messages/1.json\n"],["update","PasswordResetsController","PasswordResetsController.html#method-i-update","()",""],["update","SettingsController","SettingsController.html#method-i-update","()","<p>PATCH/PUT /settings/1 PATCH/PUT /settings/1.json\n"],["update","UsersController","UsersController.html#method-i-update","()","<p>PATCH/PUT /users/1 PATCH/PUT /users/1.json\n"],["user","WebservicesController","WebservicesController.html#method-i-user","()",""],["user_params","UsersController","UsersController.html#method-i-user_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["vote","WebservicesController","WebservicesController.html#method-i-vote","()",""],["vote_params","VotesController","VotesController.html#method-i-vote_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"]]}}